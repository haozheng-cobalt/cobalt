name: Check Artifact Size
description: Check if the size of the newly created artifact specified by path is larger than the size of the previously uploaded artifact specified by name by the threshold.
inputs:
  workflow:
    description: "Workflow to check artifact binary size for."
    required: true
  name:
    description: "Name of the latest uploaded artifact."
    required: true
  path:
    description: "Path to the artifact being checked."
    required: true
  threshold:
    description: "Threshold for artifact binary size increase percentage."
    required: true
runs:
  using: "composite"
  steps:
      - name: Check Size
        uses: actions/github-script@v6
        with:
          script: |
            // Get the latest successful workflow run.
            const workflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '${{ inputs.workflow }}.yaml',
              branch: 'main',
              status: 'success',
              per_page: 1
            });

            const latestRun = workflowRuns.data.workflow_runs[0].id;

            // Get the artifact uploaded on the latest successful workflow run.
            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: latestRun
            });

            const matchArtifacts = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == '${{ inputs.name }}';
            });

            if (matchArtifacts.length == 1) {
              console.log(`Checking artifact size of ${{ inputs.name }} on workflow ${{ inputs.workflow }}.`);

              const cur_size = matchArtifacts[0].size_in_bytes;

              const fs = require('fs');
              const path = require('path');
              const filePath = path.join(process.env.GITHUB_WORKSPACE, '${{ inputs.path }}');
              const stats = fs.statSync(filePath);
              const new_size = stats.size;

              console.log(`Artifact size on the main branch is ${cur_size / 1024 /1024}MB, new artifact size to be uploaded is ${new_size / 1024 / 1024}MB.`);

              const delta_size = new_size - cur_size;
              const delta_threshold = (Math.abs(delta_size) / cur_size * 100).toFixed(4);

              if (delta_size < 0) {
                console.log(`Artifact size is decreased by ${delta_threshold}%.`);
              } else {
                console.log(`Artifact size is increased by ${delta_threshold}%.`);
                if (delta_threshold > ${{ inputs.threshold }}) {
                  const threshold = (${{ inputs.threshold }} * 100).toFixed(4);
                  core.setFailed(`Artifact size increase is over threshold ${threshold}%.`);
                }
              }
            } else {
              core.setFailed(`Expected one artifact with name ${{ inputs.name }}. Found ${matchArtifacts.length}.`);
            }
